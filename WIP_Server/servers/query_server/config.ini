[server]
# サーバー自身の設定
host = 0.0.0.0
port = ${QUERY_GENERATOR_PORT}
debug = ${WIP_DEBUG}
max_workers = 10

[redis]
# Redis接続設定
host = ${REDIS_HOST}
port = ${REDIS_PORT}
db = 0

[database]
# データベース設定（気象データ読み込み用）
weather_output_file = ${WEATHER_OUTPUT_FILE}

[network]
# ネットワーク設定
udp_buffer_size = ${UDP_BUFFER_SIZE}

[system]
# システム設定
protocol_version = ${PROTOCOL_VERSION}

[schedule]
# 気象データ更新時刻 (例: 毎日午前3時, 正午, 午後6時)
weather_update_time = 05:00, 11:00, 17:00
# skip_areaの確認と更新間隔（分）
skip_area_check_interval_minutes = 10

[auth]
# 受信時認証設定（このサーバーへの接続時）
enable_auth = ${QUERY_SERVER_AUTH_ENABLED}
passphrase = ${QUERY_SERVER_PASSPHRASE}
# 各宛先サーバーのリクエスト認証設定（宛先サーバーが認証を要求するかどうか）
location_server_request_auth_enabled = ${LOCATION_RESOLVER_REQUEST_AUTH_ENABLED}
weather_server_request_auth_enabled = ${WEATHER_SERVER_REQUEST_AUTH_ENABLED}
report_server_request_auth_enabled = ${REPORT_SERVER_REQUEST_AUTH_ENABLED}
# 各サーバーのパスフレーズ（宛先サーバーに応じて使用）
location_server_passphrase = ${LOCATION_SERVER_PASSPHRASE}
weather_server_passphrase = ${WEATHER_SERVER_PASSPHRASE}
report_server_passphrase = ${REPORT_SERVER_PASSPHRASE}
# レスポンス送信時認証設定（自サーバからリクエスト送信時、レスポンスパケット認証する（レスポンスパケットに認証フィールドを格納させる）かどうか）
response_auth_enabled = ${QUERY_GENERATOR_RESPONSE_AUTH_ENABLED}
